#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import (absolute_import, division, print_function);

__author__ = "Paul Greenberg @greenpau";
__version__ = "1.0";
__maintainer__ = "Paul Greenberg";
__email__ = "greenpau@outlook.com";
__status__ = "Alpha";

import os;
import sys;
import argparse;
import logging;
import pprint;
from ndmtk.plugins.analytics.toolkit import ToolkitDatabase;

__project_name__ = str(os.path.basename(__file__)).replace('.pyc', '').replace('.py', '');
__project_description__ = "ndmTk Analytics";

logging.basicConfig(stream=sys.stdout, level=logging.WARNING, format= __project_name__ + ' | %(levelname)s | %(message)s');
log = logging.getLogger(__file__);


def main():
    global log;
    descr = "%s - %s\n\n" % (__project_name__, __project_description__);
    epil = '\ncontacts: %s\n\n' % (__author__);

    parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,
                                     description=descr, epilog=epil);
    main_group = parser.add_argument_group(None);
    main_group.add_argument('-i', metavar='DIR', dest='input_dir', type=str,
                            default=None, help='input data directory');

    logging_group = parser.add_argument_group('Logging and Debugging');
    logging_group.add_argument('-l', '--log-level', dest='log', metavar='LEVEL', type=int, default=0, \
                            choices=range(1, 3), help='Log level (default: 0, max: 2)');
    args = parser.parse_args();

    if args.log == 1:
        log.setLevel(logging.INFO);
        logging.getLogger("ToolkitDatabase").setLevel(logging.INFO);
    elif args.log == 2:
        log.setLevel(logging.DEBUG);
        logging.getLogger("ToolkitDatabase").setLevel(logging.DEBUG);
    else:
        log.setLevel(logging.WARNING);
        logging.getLogger("ToolkitDatabase").setLevel(logging.WARNING);

    tk = ToolkitDatabase(data_dir=args.input_dir);
    pprint.pprint(tk.data);


if __name__ == '__main__':
    main();
